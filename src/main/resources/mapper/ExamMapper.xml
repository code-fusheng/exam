<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.fusheng.exam.core.mapper.ExamMapper">
  <resultMap id="BaseResultMap" type="xyz.fusheng.exam.core.entity.Exam">
    <!--@mbg.generated-->
    <!--@Table ex_exam-->
    <id column="exam_id" jdbcType="BIGINT" property="examId" />
    <result column="exam_name" jdbcType="VARCHAR" property="examName" />
    <result column="exam_description" jdbcType="VARCHAR" property="examDescription" />
    <result column="is_public" jdbcType="TINYINT" property="isPublic" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="is_limit_time" jdbcType="TINYINT" property="isLimitTime" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="analysis" jdbcType="VARCHAR" property="analysis" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="is_deleted" jdbcType="BOOLEAN" property="isDeleted" />
    <result column="is_enabled" jdbcType="BOOLEAN" property="isEnabled" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    exam_id, exam_name, exam_description, is_public, `password`, is_limit_time,
    start_time, end_time, remark, analysis, created_time, update_time, created_by, update_by,
    version, is_deleted, is_enabled
  </sql>

  <select id="getExamVoById" resultType="xyz.fusheng.exam.core.vo.ExamVo">
    select e.*, su1.username as createdUserName, su2.username as updateUserName
    from ex_exam e left join sys_user su1 on e.created_by = su1.user_id
                    left join sys_user su2 on e.update_by = su2.user_id
    where e.exam_id = #{examId} and e.is_deleted = 0
  </select>

  <select id="getExamVoByPage" resultType="xyz.fusheng.exam.core.vo.ExamVo">
    select e.*, su1.username as createdUserName, su2.username as updateUserName
    from ex_exam e left join sys_user su1 on e.created_by = su1.user_id
                   left join sys_user su2 on e.update_by = su2.user_id
    where e.is_deleted = 0
    <if test="params.examName != null and params.examName != ''">
        and e.exam_name like concat(#{params.examName}, '%')
    </if>
    <if test="params.isPublic != null">
        and e.is_public = #{params.isPublic}
    </if>
    <if test="params.isLimitTime != null">
        and e.is_limit_time = #{params.isLimitTime}
    </if>
    <if test="params.createdUserName != null and params.createdUserName != ''">
        and su1.username like concat(#{params.createdUserName}, '%')
    </if>
    <if test="params.isEnabled != null">
        and e.is_enabled = #{params.isEnabled}
    </if>
    <if test="params.examTime != null">
        and e.created_time between #{params.examTime[0], jdbcType=TIMESTAMP} and #{params.examTime[1], jdbcType=TIMESTAMP}
    </if>
    <if test="sortColumn !=null and sortColumn != ''">
        order by ${sortColumn} ${sortMethod}
    </if>
    limit #{index}, #{pageSize}
  </select>

  <select id="getTotalCountByPage" resultType="java.lang.Integer">
    select count(*)
    from ex_exam e left join sys_user su1 on e.created_by = su1.user_id
                   left join sys_user su2 on e.update_by = su2.user_id
    where e.is_deleted = 0
    <if test="params.examName != null and params.examName != ''">
        and e.exam_name like concat(#{params.examName}, '%')
    </if>
    <if test="params.createdUserName != null and params.createdUserName != ''">
        and su1.username like concat(#{params.createdUserName}, '%')
    </if>
    <if test="params.isEnabled != null">
        and e.is_enabled = #{params.isEnabled}
    </if>
    <if test="params.examTime != null">
        and e.created_time between #{params.examTime[0], jdbcType=TIMESTAMP} and #{params.examTime[1], jdbcType=TIMESTAMP}
    </if>
  </select>

</mapper>
